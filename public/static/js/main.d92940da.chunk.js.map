{"version":3,"sources":["logo.png","components/LaunchItem.js","components/MissionKey.js","components/Launches.js","components/Launch.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","monthNames","LaunchItem","launch","flight_number","mission_name","launch_date_local","launch_success","mission_patch","links","className","src","alt","style","paddingLeft","paddingRight","height","width","display","classNames","Date","getMonth","i","j","k","ordinal_suffix_of","getDay","getFullYear","to","MissionKey","LAUNCHES_QUERY","gql","Launches","query","loading","error","data","console","log","launches","map","key","Component","LAUNCH_QUERY","Launch","this","props","match","params","parseInt","variables","launch_year","details","rocket","rocket_id","rocket_name","rocket_type","presskit","flickr_images","presskit_pdf","title","flickr_images_gallery","flickr_images_list","length","forEach","flickr_image_link","push","paddingBottom","client","ApolloClient","uri","App","logo","paddingTop","margin","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oFAAAA,EAAOC,QAAU,IAA0B,kC,2RCIrCC,EAAa,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAClE,OAAQ,SAAU,YAAa,UAAW,WAAY,YAkBzC,SAASC,EAAT,GACkB,IAAD,IADIC,OAAUC,EACd,EADcA,cAAeC,EAC7B,EAD6BA,aAAcC,EAC3C,EAD2CA,kBAAmBC,EAC9D,EAD8DA,eACjFC,EAAmB,EAA5BC,MAASD,cACT,OACI,yBAAKE,UAAU,uBACX,yBAAKA,UAAU,OACP,yBACIC,IAAKH,EACLI,IAAI,6BACJC,MAAO,CACPC,YAAa,GACbC,aAAc,GACdC,OAAQ,GACRC,MAAO,IACPC,QAAS,WAGjB,yBAAKR,UAAU,YACX,uCACc,IACV,0BAAMA,UAAWS,IAAW,CACxB,eAAgBZ,EAChB,eAAgBA,KAEdF,IAGV,qCAAYJ,EAAW,IAAImB,KAAKd,GAAmBe,YACjD,IA1CtB,SAA2BC,GACvB,IAAIC,EAAID,EAAI,GACRE,EAAIF,EAAI,IACZ,OAAU,IAANC,GAAiB,KAANC,EACJF,EAAI,KAEL,IAANC,GAAiB,KAANC,EACJF,EAAI,KAEL,IAANC,GAAiB,KAANC,EACJF,EAAI,KAERA,EAAI,KA8BaG,CAAkB,IAAIL,KAAKd,GAAmBoB,UACpD,IAAM,IAAIN,KAAKd,GAAmBqB,cAFpC,MAIJ,yBAAKjB,UAAU,YACX,kBAAC,IAAD,CAAMkB,GAAE,kBAAaxB,GAAiBM,UAAU,qBAAhD,qBCpDL,SAASmB,IACpB,OACI,6BACI,2BACI,0BAAMnB,UAAU,yBADpB,cAGA,2BACI,0BAAMA,UAAU,wBADpB,Y,gVCFZ,IAAMoB,EAAiBC,IAAH,KA0CLC,EA3Bf,iLAEQ,OACI,kBAAC,WAAD,KACI,wBAAItB,UAAU,kBAAd,YACA,kBAACmB,EAAD,MACA,kBAAC,IAAD,CAAOI,MAAOH,IAEN,YAA6B,IAA3BI,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,KACd,OAAGF,EAAgB,2CAChBC,GAAOE,QAAQC,IAAIH,GACtBE,QAAQC,IAAIF,GACL,kBAAC,WAAD,KAECA,EAAKG,SAASC,KAAI,SAAArC,GAAM,OACpB,kBAACD,EAAD,CAAYuC,IAAKtC,EAAOC,cAAeD,OAAQA,iBAfvF,GAA8BuC,a,4kBCf9B,IAAMC,EAAeZ,IAAH,KA6JHa,EAtIf,iLACc,IACAxC,EAAkByC,KAAKC,MAAMC,MAAMC,OAAnC5C,cAGN,OAFAA,EAAgB6C,SAAS7C,GAGrB,kBAAC,WAAD,KACI,kBAAC,IAAD,CAAO6B,MAAQU,EAAeO,UAAW,CAAE9C,mBAEnC,YAA6B,IAA3B8B,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,KACd,GAAIF,EAAS,OAAO,0CAChBC,GAAOE,QAAQC,IAAIH,GAFC,MAM+BC,EAAKjC,OAFpDE,EAJgB,EAIhBA,aAAcD,EAJE,EAIFA,cAAe+C,EAJb,EAIaA,YAAa5C,EAJ1B,EAI0BA,eAAgB6C,EAJ1C,EAI0CA,QAJ1C,IAKpBC,OAASC,EALW,EAKXA,UAAWC,EALA,EAKAA,YAAaC,EALb,EAKaA,YALb,IAMpB/C,MAAQD,EANY,EAMZA,cAAeiD,EANH,EAMGA,SAAUC,EANb,EAMaA,cAEjCC,EAAe,KACfF,IACAE,EACA,6BACI,wBAAIjD,UAAU,QAAd,YACA,4BACIkD,MAAM,WACNjD,IAAK8C,EACLxC,MAAM,OACND,OAAO,UAEX,+BAIR,IAAI6C,EAAwB,KACxBC,EAAqB,GA6BzB,OA5BIJ,EAAcK,OAAS,IACvB1B,QAAQC,IAAIoB,GACZA,EAAcM,SAAQ,SAAAC,GAClBH,EAAmBI,KACf,yBAAKxD,UAAU,QAAQ+B,IAAKwB,GACxB,yBACItD,IAAKsD,EACLrD,IAAI,YACJC,MAAO,CACPC,YAAa,GACbC,aAAc,GACdoD,cAAe,GACfnD,OAAQ,YAMxB6C,EACA,6BACI,wBAAInD,UAAU,QAAd,UACA,yBAAKA,UAAU,YACVoD,GAEL,+BAKJ,6BACI,wBAAIpD,UAAU,kBACV,0BAAMA,UAAU,aAAhB,YACc,KAEbL,GAEL,6BACI,yBACIM,IAAKH,EACLI,IAAI,6BACJC,MAAO,CACPC,YAAa,GACbC,aAAc,GACdoD,cAAe,GACflD,MAAO,IACPC,QAAS,YAIjB,wBAAIR,UAAU,QAAd,mBACA,4BAAM0C,GACN,6BACA,wBAAI1C,UAAU,QAAd,kBACA,4BACI,wBAAIA,UAAU,mBAAd,kBACoBN,GAEpB,wBAAIM,UAAU,mBAAd,gBACkByC,GAElB,wBAAIzC,UAAU,mBAAd,qBACuB,IACnB,0BAAMA,UAAWS,IAAW,CACxB,eAAgBZ,EAChB,eAAgBA,KAEfA,EAAiB,MAAQ,QAItC,6BACA,wBAAIG,UAAU,QAAd,kBACA,4BACI,wBAAIA,UAAU,mBAAd,cACgB4C,GAEhB,wBAAI5C,UAAU,mBAAd,gBACkB6C,GAElB,wBAAI7C,UAAU,mBAAd,gBACkB8C,IAGtB,6BACEK,EACAF,EACF,kBAAC,IAAD,CAAM/B,GAAG,IAAIlB,UAAU,qBAAvB,QAGA,sCA3HpC,GAA4BgC,a,yBCnBtB0B,EAAS,IAAIC,IAAa,CAC9BC,IAAK,aA0BQC,MAvBf,WACE,OACE,kBAAC,IAAD,CAAgBH,OAAQA,GACtB,kBAAC,IAAD,KACE,yBAAK1D,UAAU,aACb,yBACEC,IAAK6D,IACL5D,IAAI,SACJC,MAAO,CACL4D,WAAY,GACZxD,MAAO,IACPC,QAAS,QACTwD,OAAQ,UAGZ,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAY7C,IAClC,kBAAC,IAAD,CAAO2C,OAAK,EAACC,KAAK,yBAAyBC,UAAYjC,QClB7CkC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASlC,MACvB,2DCZNmC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.d92940da.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.f751c040.png\";","import React from 'react';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\n\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n];\n\nfunction ordinal_suffix_of(i) {\n    var j = i % 10,\n        k = i % 100;\n    if (j === 1 && k !== 11) {\n        return i + \"st\";\n    }\n    if (j === 2 && k !== 12) {\n        return i + \"nd\";\n    }\n    if (j === 3 && k !== 13) {\n        return i + \"rd\";\n    }\n    return i + \"th\";\n}\n\nexport default function LaunchItem({launch: { flight_number, mission_name, launch_date_local, launch_success,\n    links: { mission_patch }}}) {\n    return (\n        <div className=\"card card-body mb-3\">\n            <div className=\"row\">\n                    <img \n                        src={mission_patch} \n                        alt=\"No Mission Patch Available\" \n                        style={{ \n                        paddingLeft: 20,\n                        paddingRight: 20,\n                        height: 60,\n                        width: 100, \n                        display: 'block',\n                        }}\n                    />\n                <div className=\"col-md-7\">\n                    <h4>\n                        Mission:{ \" \" }\n                        <span className={classNames({\n                            'text-success': launch_success,\n                            'text-danger': !launch_success\n                        })}>\n                            { mission_name }\n                        </span>\n                    </h4>\n                    <h6>Date: { monthNames[new Date(launch_date_local).getMonth()] \n                    + \" \" + ordinal_suffix_of(new Date(launch_date_local).getDay()) \n                    + \" \" + new Date(launch_date_local).getFullYear()} </h6>\n                </div>\n                <div className=\"col-md-3\">\n                    <Link to={`/launch/${flight_number}`} className=\"btn btn-secondary\">\n                        Launch Details\n                    </Link>\n                </div>\n            </div>\n        </div>\n    )\n}","import React from 'react';\n\nexport default function MissionKey() {\n    return(\n        <div>\n            <p>\n                <span className=\"px-3 mr-2 bg-success\"/> = Success\n            </p>\n            <p>\n                <span className=\"px-3 mr-2 bg-danger\"/> = Fail\n            </p>\n        </div>\n    )\n}\n","import React, { Component , Fragment} from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport LaunchItem from './LaunchItem';\nimport MissionKey from './MissionKey';\n\nconst LAUNCHES_QUERY = gql`\n    query LaunchesQuery {\n        launches {\n            flight_number\n            mission_name\n            launch_date_local\n            launch_success\n            details\n            links {\n                mission_patch\n            }\n        }\n    }\n`;\n\nexport class Launches extends Component {\n    render() {\n        return (\n            <Fragment>\n                <h1 className=\"display-4 my-3\">Launches</h1>\n                <MissionKey/>\n                <Query query={LAUNCHES_QUERY}>\n                    {\n                        ({loading, error, data}) => {\n                            if(loading) return <h4>Loading...</h4>;\n                            if(error) console.log(error);\n                            console.log(data);\n                            return <Fragment>\n                                {\n                                    data.launches.map(launch => (\n                                        <LaunchItem key={launch.flight_number} launch={launch}/>\n                                    ))\n                                }\n                            </Fragment>\n                        }\n                    }\n                </Query>\n            </Fragment>\n        )\n    }\n}\n\nexport default Launches","import React, { Component, Fragment } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\nconst LAUNCH_QUERY = gql`\n    query LaunchQuery($flight_number: Int!) {\n        launch(flight_number: $flight_number){\n            flight_number\n            mission_name\n            launch_year\n            launch_success\n            launch_date_local\n            details\n            rocket {\n                rocket_id\n                rocket_name\n                rocket_type\n            }\n            links {\n                mission_patch\n                presskit\n                flickr_images\n            }\n        }\n    }\n`;\n\nexport class Launch extends Component{\n    render() {\n        let { flight_number } = this.props.match.params;\n        flight_number = parseInt(flight_number);\n\n        return (\n            <Fragment>\n                <Query query={ LAUNCH_QUERY } variables={{ flight_number }}>\n                    {\n                        ({loading, error, data}) => {\n                            if (loading) return <h4>Loading...</h4>;\n                            if (error) console.log(error);\n                            \n                            const { mission_name, flight_number, launch_year, launch_success, details,\n                                rocket: {rocket_id, rocket_name, rocket_type},\n                                links: {mission_patch, presskit, flickr_images}} = data.launch;\n                            \n                            let presskit_pdf = null;\n                            if (presskit) {\n                                presskit_pdf = \n                                <div>\n                                    <h4 className=\"mb-3\">PressKit</h4>\n                                    <iframe \n                                        title=\"presskit\"\n                                        src={presskit} \n                                        width=\"100%\" \n                                        height=\"500px\"\n                                    />\n                                    <hr/>\n                                </div>\n                            }\n\n                            let flickr_images_gallery = null;\n                            let flickr_images_list = [];\n                            if (flickr_images.length > 0) {\n                                console.log(flickr_images)\n                                flickr_images.forEach(flickr_image_link => {\n                                    flickr_images_list.push(\n                                        <div className=\"slide\" key={flickr_image_link}>\n                                            <img \n                                                src={flickr_image_link} \n                                                alt=\"Not Found\" \n                                                style={{ \n                                                paddingLeft: 20,\n                                                paddingRight: 20,\n                                                paddingBottom: 20,\n                                                height: 200, \n                                                }}\n                                            />\n                                        </div>\n                                    )\n                                });\n                                flickr_images_gallery = \n                                <div>\n                                    <h4 className=\"mb-3\">Images</h4>\n                                    <div className=\"carousel\">\n                                        {flickr_images_list}\n                                    </div>\n                                    <hr/>\n                                </div>\n                            }\n\n                            return(\n                                <div>\n                                    <h1 className=\"display-4 my-3\">\n                                        <span className=\"text-dark\">\n                                            Mission: {' '}\n                                        </span>\n                                        {mission_name}\n                                    </h1>\n                                    <div>\n                                        <img \n                                            src={mission_patch} \n                                            alt=\"No Mission Patch Available\" \n                                            style={{ \n                                            paddingLeft: 20,\n                                            paddingRight: 20,\n                                            paddingBottom: 20,\n                                            width: 200, \n                                            display: 'block',\n                                            }}\n                                        />\n                                    </div>\n                                    <h4 className=\"mb-3\">General Details</h4>\n                                    <h6>{ details }</h6>\n                                    <hr/>\n                                    <h4 className=\"mb-3\">Launch Details</h4>\n                                    <ul>\n                                        <li className=\"list-group-item\">\n                                            Flight Number: {flight_number}\n                                        </li>\n                                        <li className=\"list-group-item\">\n                                            Launch Year: {launch_year}\n                                        </li>\n                                        <li className=\"list-group-item\">\n                                            Launch Successful:{' '} \n                                            <span className={classNames({\n                                                'text-success': launch_success,\n                                                'text-danger': !launch_success,\n                                            })}>\n                                                {launch_success ? 'Yes' : 'No'}\n                                            </span>\n                                        </li>\n                                    </ul>\n                                    <hr/>\n                                    <h4 className=\"mb-3\">Rocket Details</h4>\n                                    <ul>\n                                        <li className=\"list-group-item\">\n                                            Rocket ID: {rocket_id}\n                                        </li>\n                                        <li className=\"list-group-item\">\n                                            Rocket Name: {rocket_name}\n                                        </li>\n                                        <li className=\"list-group-item\">\n                                            Rocket Type: {rocket_type}\n                                        </li>\n                                    </ul>\n                                    <hr/>\n                                    { flickr_images_gallery }\n                                    { presskit_pdf }\n                                    <Link to=\"/\" className=\"btn btn-secondary\">\n                                        Back\n                                    </Link>\n                                    <hr/>\n                                </div>\n                            )\n                        }\n                    }\n                </Query>\n            </Fragment>\n        )\n    }\n}\n\nexport default Launch","import React from 'react';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nimport { BrowserRouter as Router, Route} from 'react-router-dom';\nimport Launches from './components/Launches';\nimport Launch from './components/Launch';\n\nimport './App.css';\nimport logo from './logo.png'\n\nconst client = new ApolloClient({\n  uri: '/graphql'\n})\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"container\">\n          <img \n            src={logo} \n            alt=\"SpaceX\" \n            style={{ \n              paddingTop: 20,\n              width: 300, \n              display: 'block', \n              margin: 'auto'\n            }}\n          />\n          <Route exact path=\"/\" component={ Launches }/>\n          <Route exact path=\"/launch/:flight_number\" component={ Launch }/>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}